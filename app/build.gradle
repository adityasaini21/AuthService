plugins {
    id 'java'
    id 'application'
    id 'org.springframework.boot' version '3.3.1' // Upgraded to a recent, stable version
    id 'io.spring.dependency-management' version '1.1.5' // Corresponding version
}

repositories {
    mavenCentral()
}

// Ext block for managing versions
ext {
    set('springCloudVersion', "2023.0.1")
    set('lombokVersion', "1.18.32") // Updated to a recent lombok version
}

dependencies {
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // Spring Cloud
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-bootstrap'

    // Other Dependencies
    implementation 'org.modelmapper:modelmapper:3.2.0'
    implementation 'mysql:mysql-connector-java:8.0.33'
    implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.5'

    // Lombok - Using the 'compileOnly' and 'annotationProcessor' standard
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    // Test dependencies
    testImplementation "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.rest-assured:rest-assured:5.4.0'
}

// Dependency Management for Spring Cloud
dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

// Java toolchain configuration
java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21

    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    mainClass = 'org.example.App'
}
